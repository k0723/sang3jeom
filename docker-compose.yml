version: '3.8'

services:
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      # RDS 연결
      DATASOURCE_URL: jdbc:mysql://${RDS_ENDPOINT}:3306/${RDS_DB_NAME}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      DATASOURCE_USERNAME: ${RDS_USERNAME}
      DATASOURCE_PASSWORD: ${RDS_PASSWORD}
      # Redis 연결
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis

  community-service:
    build:
      context: ./backend/community-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATASOURCE_URL: jdbc:mysql://${RDS_ENDPOINT}:3306/${COMMUNITY_DB_NAME}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      DATASOURCE_USERNAME: ${RDS_USERNAME}
      DATASOURCE_PASSWORD: ${RDS_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis

  order-service:
    build:
      context: ./backend/order-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATASOURCE_URL: jdbc:mysql://${RDS_ENDPOINT}:3306/${ORDER_DB_NAME}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      DATASOURCE_USERNAME: ${RDS_USERNAME}
      DATASOURCE_PASSWORD: ${RDS_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis

  image-service:
    build:
      context: ./backend/image-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
