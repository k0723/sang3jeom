spring:
  redis:
    host: localhost
    port: 6379


  datasource:
    # 환경변수 DATASOURCE_URL이 없으면 기본 URL 사용
    url:       jdbc:mysql://${RDS_ENDPOINT}:3306/${RDS_DB_NAME}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    # 환경변수 DATASOURCE_USERNAME/PASSWORD이 없으면 root/1234 사용
    username:  ${DATASOURCE_USERNAME}
    password:  ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  doc:
    api-docs:
      path: /api-docs
    swagger-ui:
      path: /docs
      operationsSorter: alpha
      show-common-extensions: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id:     ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            # 리디렉션 URI (registrationId 자리에는 'google'이 들어감)
            redirect-uri:  http://localhost:8080/oauth2/redirection/{registrationId}

          kakao:
            client-id:     ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope:
              - profile_nickname  # 필요에 따라 email 등 추가
              - profile_image

            provider: kakao  
            redirect-uri:  http://localhost:8080/oauth2/redirection/{registrationId}
            authorization-grant-type: authorization_code 
        provider:                      # ← registration과 같은 레벨에 provider 블록을 추가
          kakao:
            authorization-uri:    https://kauth.kakao.com/oauth/authorize
            token-uri:            https://kauth.kakao.com/oauth/token
            user-info-uri:        https://kapi.kakao.com/v2/user/me
            user-name-attribute:  id

jwt:
  secret: ${JWT_SECRET}
  access-expiry-ms: 900000       # 15분
  refresh-expiry-ms: 1209600000  # 14일

services:
  user:
    url: http://localhost:8081

logging:
  level:
    org.springframework.security: TRACE


grpc:
  server:
    security:
      enabled: false

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${S3_REGION}
    s3:
      bucket: ${S3_BUCKET}

