plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.7'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}
ext {
	grpcVersion = '1.64.0'
    protobufVersion = '3.25.3'
    grpcSpringBootVersion = '2.15.0.RELEASE' // yidongnan/grpc-spring-boot-starter
    springCloudVersion = "2024.0.2" // Boot 3.3+ 호환. (3.5.x도 2024.0.x 사용)
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
    }
}

dependencies {

	// Spring Cloud OpenFeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	//Fegin Logger 
	implementation 'io.github.openfeign:feign-core'
    implementation 'io.github.openfeign:feign-slf4j'

	//kafka
	implementation 'org.springframework.kafka:spring-kafka'
	//s3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.696'
	//redis 
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	compileOnly 'org.projectlombok:lombok:1.18.26'
  	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	// Spring Security + OAuth2 Client/Resource Server
	implementation 'org.springframework.boot:spring-boot-starter-security'
  	implementation 'org.springframework.security:spring-security-oauth2-client'
  	implementation 'org.springframework.security:spring-security-oauth2-jose'
  	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation "org.springframework.boot:spring-boot-starter-cache"
	// JWT support
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly	  'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  	implementation 'org.springframework.boot:spring-boot-starter-web'
  	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.696'

}
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protobufVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins { grpc {} }
            task.builtins { java {} }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs "${projectDir}/build/generated/source/proto/main/java",
                    "${projectDir}/build/generated/source/proto/main/grpc"
        }
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
