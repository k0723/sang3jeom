server:
  port: 8084

spring:
  config:
    import: optional:file:.env[.properties]
  main:
    allow-bean-definition-overriding: true  # Bean 중복 정의 허용 (임시)
# DB 접속 정보
  datasource:
    url: jdbc:mysql://${RDS_ENDPOINT}:3306/${RDS_DB_NAME}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
#    url: jdbc:mysql://127.0.0.1:3306/review-service?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DATASOURCE_USERNAME}
#    username: root
    password: ${DATASOURCE_PASSWORD}
#    password: p@ssw0rd
    # Connection Pool 설정 수정 - 더 작게 설정
    hikari:
      maximum-pool-size: 3       # 최대 연결 수를 3으로 줄임
      minimum-idle: 1            # 최소 유휴 연결 수
      idle-timeout: 30000        # 30초 후 유휴 연결 해제
      max-lifetime: 300000       # 5분 후 연결 재생성
      connection-timeout: 10000  # 10초 연결 타임아웃
      leak-detection-threshold: 5000  # 5초 후 연결 누수 감지
      validation-timeout: 3000   # 검증 타임아웃 3초
      connection-test-query: SELECT 1  # 연결 테스트 쿼리
# JPA 설정
  jpa:
    hibernate:
      ddl-auto: update  # 개발 중엔 update, 운영은 validate or none 권장
    properties:
      hibernate:
        format_sql: true
    show-sql: true
# OpenFeign 로컬 테스트용
  profiles:
    active: local # 기본 활성 프로필을 local로 지정

# Feign Client가 호출할 service들의 로컬 주소를 직접 지정
service-urls:
  user-service: http://localhost:8080
  order-service: http://localhost:8082

# Review Service 자체 설정
review-service:
  user-verification:
    enabled: false  # User Service 호출 비활성화 (다른 개발자 작업 중)
    mock-mode: true # Mock 데이터 사용
    fallback-on-error: true # 에러 시 Fallback 사용
  development:
    note: "User Service는 다른 개발자가 작업 중입니다. 완료 후 user-verification.enabled를 true로 변경하세요."

# Feign 설정
feign:
  client:
    config:
      default:
        connectTimeout: 10000  # 연결 타임아웃 10초
        readTimeout: 30000     # 읽기 타임아웃 30초
        loggerLevel: full      # 로그 레벨
      user-service:           # 특정 서비스별 설정
        connectTimeout: 5000   # user-service는 더 짧게 설정
        readTimeout: 10000
      order-service:          # order-service 설정 추가
        connectTimeout: 5000
        readTimeout: 10000
  circuitbreaker:
    enabled: true
  compression:
    request:
      enabled: true
    response:
      enabled: true

# S3 버킷 정보 & AWS 자격 증명
cloud:
  aws:
    s3:
      bucket: sang3jeomtest
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2
