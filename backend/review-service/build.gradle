plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.0"

		mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:3.3.0"
	}
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// OpenFeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// S3
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'

	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"



	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// QueryDSL Q-Type 클래스 생성 위치 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(layout.buildDirectory.dir("generated/querydsl")))
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', layout.buildDirectory.dir("generated/querydsl")]
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
